import socket
import time
import struct

PROJECTOR_IP = "10.10.10.2"
PROJECTOR_PORT = 53595

def create_adcp_connection():
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.connect((PROJECTOR_IP, PROJECTOR_PORT))
    return sock

def send_adcp_command(sock, command):
    try:
        cmd = struct.pack('>I', len(command)) + command.encode('ascii')
        print(f"Sending: {cmd}")
        sock.sendall(cmd)
        response = sock.recv(1024)
        print(f"Received raw: {response}")
        if len(response) > 4:
            return response[4:].decode('ascii', errors='ignore')
        else:
            return "No data"
    except socket.error as e:
        print(f"Socket error: {e}")
        return None

def get_power_status(sock):
    return send_adcp_command(sock, "POWR ?\r")

def main():
    while True:
        try:
            with create_adcp_connection() as sock:
                while True:
                    print("Querying power status...")
                    power_status = get_power_status(sock)
                    if power_status is None:
                        break  # Connection lost, try to reconnect
                    print(f"Power status response: '{power_status}'")
                    print(f"Power: {power_status.strip()}")
                    print("-" * 50)
                    time.sleep(5)  # Wait 5 seconds before next query
        except Exception as e:
            print(f"Connection error: {e}")
        print("Attempting to reconnect in 10 seconds...")
        time.sleep(10)

if __name__ == "__main__":
    main()